// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
package org.usfirst.frc5122.Fred.commands;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc5122.Fred.Robot;
/**
 *
 */
public class  PullBackThrower extends Command {
    //private boolean finished = false;
	//private int readyCounter = 0;
    private boolean finish;
    private boolean finished;
    private boolean waiting;
    
    private double minpullbacktime = .5;
    private double start;
    public PullBackThrower() {
        // Use requires() here to declare subsystem dependencies
        // eg. requires(chassis);
		//readyCounter = 0;
	
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.thrower);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }
    public PullBackThrower(boolean finish) {
        this.finish = finish;
        //Not sure if Robot builder will be able to update both of these.
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.thrower);
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }
    // Called just before this Command runs the first time
    protected void initialize() {
        System.out.println("PullBack Init: "+timeSinceInitialized());
        Robot.thrower.PullBack();
        finished = false;
        waiting = false; //waiting for kicker to be ready
        start = timeSinceInitialized();
        //finished = false;
//        if (!Robot.thrower.Ready())
//        {
//            Robot.thrower.PullBack();
//        }
		//System.out.println("Pull Back Thrower Ready:"+Robot.thrower.Ready());
    }
    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
        if(waiting || (timeSinceInitialized()-start) < minpullbacktime)
        {
            return;
        }
        if (Robot.thrower.Ready()) {
            Robot.thrower.Stop();
            if (finish) {
                finished = true;
            }
            waiting = true;
            System.out.println("Done Pullback "+timeSinceInitialized()+" "+Robot.thrower.Ready());
        } else {
                System.out.println("Pulling Back "+timeSinceInitialized());
        }
    }
    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
        return finished;
    }
    // Called once after isFinished returns true
    protected void end() {
        Robot.thrower.Stop();
    }
    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
        end();
    }
}
